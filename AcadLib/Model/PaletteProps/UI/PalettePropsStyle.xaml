<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:acwt="clr-namespace:Autodesk.Windows.Themes;assembly=AdUiPalettes"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="ComboBoxPaletteTemplate.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	<SolidColorBrush x:Key="TextBrush" Color="{Binding CurrentTheme.ControlTextColor, Source={x:Static acwt:ThemeManager.PaletteSettings}}"/>
	<SolidColorBrush x:Key="BackBrush" Color="{Binding CurrentTheme.PaletteTabActiveBottomColor, Source={x:Static acwt:ThemeManager.PaletteSettings}}"/>
	<SolidColorBrush x:Key="BackMoreBrush" Color="{Binding CurrentTheme.PropertyInspectorCategoryBackgroundColor, Source={x:Static acwt:ThemeManager.PaletteSettings}}"/>
	<SolidColorBrush x:Key="AccentBrush" Color="{Binding CurrentTheme.PropertyInspectorCategoryBackgroundColor, Source={x:Static acwt:ThemeManager.PaletteSettings}}"/>
	<Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>
	<Style x:Key="TbGroupNameStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="Margin" Value="10,0,0,0"/>
	</Style>
    <Style x:Key="TbPropNameStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
    </Style>
	<Style x:Key="BExpandStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<TextBlock Text="{TemplateBinding Content}" FontWeight="Bold" FontSize="16"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource {x:Type xctk:IntegerUpDown}}">
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style TargetType="xctk:DoubleUpDown" BasedOn="{StaticResource {x:Type xctk:DoubleUpDown}}">
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxPalette}">
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	<Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
		<Setter Property="Background" Value="{DynamicResource BackBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>
</ResourceDictionary>